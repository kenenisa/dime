{
    "openapi": "3.0.0",
    "info": {
        "version": "0.0.1",
        "title": "Agent47",
        "description": "Backend api documentation for bank hackthon app"
    },
    "paths": {
        "/account/create": {
            "post": {
                "summary": "Account setup",
                "description": "Register an account on the server by sending publicKey to the server, the server knows who is who.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "publicKey": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "publicKey"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns address after hashing and storing public key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet/info/{address}": {
            "get": {
                "summary": "Get wallet info",
                "description": "Get wallet info for a given public address",
                "parameters": [
                    {
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "amount remaining and transactions info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "amount",
                                        "transactions"
                                    ],
                                    "properties": {
                                        "amount": {
                                            "type": "number"
                                        },
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet/buy": {
            "get": {
                "summary": "Buy some credit",
                "description": "redirects to chapa",
                "responses": {
                    "200": {
                        "description": "redirects to chapa"
                    }
                }
            }
        },
        "/wallet/send": {
            "post": {
                "summary": "Send funds",
                "description": "Does checks and moves funds around",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }

                }
            }
        },
        "/wallet/loan": {
            "post": {
                "summary": "Apply for loan",
                "description": "Apply for loan to spend money under limit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "kebeleId": {
                                        "type": "string"
                                    },
                                    "uniId": {
                                        "type": "string"
                                    },
                                    "uniPhotoFront": {
                                        "type": "string",
                                        "description": "base64"
                                    },
                                    "uniPhotoBack": {
                                        "type": "string",
                                        "description": "base64"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "description": "base64"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity/{address}/{days}": {
            "get": {
                "summary": "Get activity",
                "description": "activity for n days",
                "parameters": [
                    {
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "days",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transactions and predictions data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        },
                                        "predictions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Prediction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vote": {
            "post": {
                "summary": "Cast vote",
                "description": "Vote into the reserve management",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "publicAddress": {
                                        "type": "string"
                                    },
                                    "signature": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/download-data/{address}": {
            "get": {
                "summary": "Download user data",
                "description": "Download keys and transactions data",
                "parameters": [
                    {
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Responds with a file to download"
                    }
                }
            }
        },
        "/webhook": {
            "post": {
                "summary": "Set a webhook",
                "description": "Set a webhook the server will send updates to",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ml/prediction": {
            "post": {
                "summary": "Export prediction data",
                "description": "Accepts and saves the prediction data from ML model",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/IncomingPrediction"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get training data",
                "description": "Get training data for ML",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OutgoingPrediction"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ml/reserve": {
            "post": {
                "summary": "Export reserve data",
                "description": "Accepts and saves the prediction data from ML model",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "high_spenders": {
                                        "type": "number"
                                    },
                                    "low_spenders": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns true on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get reserve training data",
                "description": "Get training data for ML",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OutgoingReserve"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "type": "object",
                "required": [
                    "success"
                ],
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "required": [
                    "publicAddress",
                    "publicKey",
                    "receiverAddress",
                    "amount",
                    "signature"
                ],
                "properties": {
                    "publicAddress": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "receiverAddress": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "uniqueTransactionToken": {
                        "type": "string"
                    }
                }
            },
            "Account": {
                "type": "object",
                "required": [
                    "id",
                    "address",
                    "public_key",
                    "balance",
                    "currency",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "highest_deposit": {
                        "type": "string"
                    },
                    "credit_limit": {
                        "type": "string"
                    },
                    "credit_score": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                }
            },
            "Prediction": {
                "type": "object",
                "required": [
                    "future_date",
                    "expense"
                ],
                "properties": {
                    "future_date": {
                        "type": "string"
                    },
                    "expense": {
                        "type": "string"
                    },
                    "deposit": {
                        "type": "string"
                    }
                }
            },
            "IncomingPrediction": {
                "type": "object",
                "required": [
                    "address",
                    "predictions"
                ],
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "predictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Prediction"
                        }
                    }
                }
            },
            "OutgoingTransaction": {
                "type": "object",
                "properties": {
                    "deposit": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "number"
                            },
                            "avg": {
                                "type": "number"
                            },
                            "max": {
                                "type": "number"
                            }
                        }
                    },
                    "expense": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "number"
                            },
                            "avg": {
                                "type": "number"
                            },
                            "max": {
                                "type": "number"
                            }
                        }
                    },
                    "date": {
                        "type": "string"
                    }
                }
            },
            "OutgoingPrediction": {
                "type": "object",
                "required": [
                    "address",
                    "days"
                ],
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OutgoingTransaction"
                        }
                    }
                }
            },
            "OutgoingReserve": {
                "type": "object",
                "required": [
                    "address",
                    "total_expense",
                    "total_deposit",
                    "active",
                    "credit_score"
                ],
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "total_expense": {
                        "type": "number"
                    },
                    "total_deposit": {
                        "type": "number"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "credit_score": {
                        "type": "number"
                    }
                }
            }
        }
    }
}